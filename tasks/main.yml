---
- name: ensure facts directory exists
  file:
    path: "/etc/ansible/facts.d"
    state: directory
    owner: "root"
    group: "root"
  become: true

- name: setup custom facts
  copy:
    src: "etc/ansible/facts.d/nv_os_release.fact"
    dest: "/etc/ansible/facts.d/nv_os_release.fact"
    owner: "root"
    group: "root"
    mode: "0755"
  when: nv_os_release is undefined
  become: true

- name: re-gather facts
  setup: filter=ansible_local
          
- name: check distro
  fail:
    msg: "distro {{ ansible_facts['distribution'] }} not supported"
  when: ansible_os_family != 'Debian' and ansible_os_family != 'RedHat'

- name: debian pre-install tasks
  include_tasks: debian-pre-install.yml
  when: ansible_os_family == 'Debian'

- name: redhat family pre-install tasks
  include_tasks: redhat-pre-install.yml
  when: ansible_os_family == 'RedHat'

- name: create /etc/docker
  file:
    path: /etc/docker
    state: directory
    mode: '0755'
  become: true

- name: set docker daemon configuration
  copy:
    content: "{{ docker_daemon_json | to_nice_json }}"
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart docker

# We could use the "nvidia-docker2" package to install this wrapper for us.
# Instead, we grab the wrapper directly to avoid packaging issues stemming from
#   docker version pinning in the nvidia-docker2 package.
- name: grab nvidia-docker wrapper
  get_url:
    url: "{{ nvidia_docker_wrapper_url }}"
    dest: /usr/local/bin/nvidia-docker
    mode: 0755
    owner: root
    group: root
  become: true
  environment: "{{proxy_env if proxy_env is defined else {}}}"

